/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'jon' at '7/4/16 1:31 PM' with Gradle 2.13
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4+'
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
    mavenCentral()
}
 
// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'ch.qos.logback:logback-classic:1.1.7'

    compile 'com.google.code.gson:gson:2.7'

    compile group: 'org.yaml', name: 'snakeyaml', version: '1.17'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    compile 'org.mockito:mockito-all:1.10.19'
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.5'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.5'
    compile 'org.jetbrains:annotations:+'
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            }
        }
}

group = 'com.cedexis'
version = '1.0'

artifactory {
    //The base Artifactory URL if not overridden by the publisher/resolver
    contextUrl = 'https://artifactory.cedexis.com/artifactory'

    publish {
        repository {
            repoKey = 'libs-release-local'   //The Artifactory repository key to publish to
            username = "${artifactory_username}"          //The publisher user name
            password = "${artifactory_password}"       //The publisher password
        }

        defaults {
//            publications ('mavenJava')
            publishArtifacts = true
            publishConfigs('archives')

            properties {                                                   
            //Optional closure to attach properties to artifacts based on a list of artifact patterns per project publication
     //       foo '*:*:*:*@*', platform: 'linux', 'win64'                
            
            //The property platform=linux,win64 will be set on all artifacts in foo publication
    //        mavenJava 'org.jfrog:*:*:*@*', key1: 'val1'                
            
            //The property key1=val1 will be set on all artifacts part of the mavenJava publication and with group org.jfrog
    //        all 'org.jfrog:shared:1.?:*@*', key2: 'val2', key3: 'val3' 
            
            //The properties key2 and key3 will be set on all published artifacts (all publications) with group:artifact:version 
            //equal to org.jfrog:shared:1.?
            }
        }
    }
}

